openapi: 3.0.3
info:
  title: ToDo List
  version: 1.0.0
  description: Your project description
paths:
  /item/:
    get:
      operationId: item_list
      tags:
      - item
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
          description: ''
    post:
      operationId: item_create
      tags:
      - item
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
  /item/{id}/:
    get:
      operationId: item_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo item.
        required: true
      tags:
      - item
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    put:
      operationId: item_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo item.
        required: true
      tags:
      - item
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    patch:
      operationId: item_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo item.
        required: true
      tags:
      - item
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedItem'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    delete:
      operationId: item_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo item.
        required: true
      tags:
      - item
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /list/:
    get:
      operationId: list_list
      tags:
      - list
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/List'
          description: ''
    post:
      operationId: list_create
      tags:
      - list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/List'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/List'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
  /list/{id}/:
    get:
      operationId: list_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo list.
        required: true
      tags:
      - list
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
    put:
      operationId: list_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo list.
        required: true
      tags:
      - list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/List'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/List'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
    patch:
      operationId: list_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo list.
        required: true
      tags:
      - list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedList'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
    delete:
      operationId: list_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo list.
        required: true
      tags:
      - list
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Item:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
        assignee:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - assignee
      - created_at
      - id
      - last_modified
    List:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: integer
        items:
          type: array
          items:
            type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - items
      - last_modified
      - owner
    PatchedItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
        assignee:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
    PatchedList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: integer
        items:
          type: array
          items:
            type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 100
        phone:
          type: string
          maxLength: 100
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        birthday:
          type: string
          format: date
          nullable: true
        is_active:
          type: boolean
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
    StatusEnum:
      enum:
      - PENDING
      - IN_PROGRESS
      - DONE
      type: string
      description: |-
        * `PENDING` - Pending
        * `IN_PROGRESS` - In Progress
        * `DONE` - Done
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 100
        phone:
          type: string
          maxLength: 100
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        birthday:
          type: string
          format: date
          nullable: true
        is_active:
          type: boolean
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - id
      - last_modified
    UserTypeEnum:
      enum:
      - ADMIN
      - USER
      type: string
      description: |-
        * `ADMIN` - Admin
        * `USER` - User
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
